{"ast":null,"code":"import { LoginActionType } from \"../types/loginType\";\nconst getLoginRequest = () => ({\n  type: LoginActionType.LOGIN_REQUEST,\n  loading: true,\n  error: null\n});\nconst getLoginSuccess = payload => ({\n  type: LoginActionType.LOGIN_SUCCESS,\n  payload: payload,\n  loading: false,\n  error: null\n});\nconst getLoginFailure = error => ({\n  type: LoginActionType.LOGIN_FAILURE,\n  loading: false,\n  error: error\n});\nconst loginFetch = (username, password) => {\n  return async dispatch => {\n    dispatch(getLoginRequest());\n    try {\n      const response = await fetch(\"http://localhost:8080/api/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        dispatch(getLoginSuccess(data));\n      } else {\n        throw new Error(\"Failed to login\");\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        dispatch(getLoginFailure(error.message));\n      } else {\n        dispatch(getLoginFailure(\"An unknown error occurred during login.\"));\n      }\n    }\n  };\n};\nexport default loginFetch;","map":{"version":3,"names":["LoginActionType","getLoginRequest","type","LOGIN_REQUEST","loading","error","getLoginSuccess","payload","LOGIN_SUCCESS","getLoginFailure","LOGIN_FAILURE","loginFetch","username","password","dispatch","response","fetch","method","headers","body","JSON","stringify","ok","data","json","Error","message"],"sources":["C:/Users/sarac/OneDrive/Desktop/Capstone Project/maze/src/actions/loginAction.ts"],"sourcesContent":["import { LoginActionType, LoginAction, Session } from \"../types/loginType\";\r\nimport { AnyAction, Dispatch } from \"@reduxjs/toolkit\";\r\n\r\nconst getLoginRequest = (): LoginAction => ({\r\n  type: LoginActionType.LOGIN_REQUEST,\r\n  loading: true,\r\n  error: null,\r\n});\r\n\r\nconst getLoginSuccess = (payload: Session): LoginAction => ({\r\n  type: LoginActionType.LOGIN_SUCCESS,\r\n  payload: payload,\r\n  loading: false,\r\n  error: null,\r\n});\r\n\r\nconst getLoginFailure = (error: string): LoginAction => ({\r\n  type: LoginActionType.LOGIN_FAILURE,\r\n  loading: false,\r\n  error: error,\r\n});\r\n\r\nconst loginFetch = (username: string, password: string) => {\r\n  return async (dispatch: Dispatch<AnyAction>) => {\r\n    dispatch(getLoginRequest());\r\n    try {\r\n      const response = await fetch(\"http://localhost:8080/api/auth/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        dispatch(getLoginSuccess(data));\r\n      } else {\r\n        throw new Error(\"Failed to login\");\r\n      }\r\n    } catch (error: unknown | Error) {\r\n      if (error instanceof Error) {\r\n        dispatch(getLoginFailure(error.message));\r\n      } else {\r\n        dispatch(getLoginFailure(\"An unknown error occurred during login.\"));\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport default loginFetch;\r\n"],"mappings":"AAAA,SAASA,eAAe,QAA8B,oBAAoB;AAG1E,MAAMC,eAAe,GAAGA,CAAA,MAAoB;EAC1CC,IAAI,EAAEF,eAAe,CAACG,aAAa;EACnCC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE;AACT,CAAC,CAAC;AAEF,MAAMC,eAAe,GAAIC,OAAgB,KAAmB;EAC1DL,IAAI,EAAEF,eAAe,CAACQ,aAAa;EACnCD,OAAO,EAAEA,OAAO;EAChBH,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC,CAAC;AAEF,MAAMI,eAAe,GAAIJ,KAAa,KAAmB;EACvDH,IAAI,EAAEF,eAAe,CAACU,aAAa;EACnCN,OAAO,EAAE,KAAK;EACdC,KAAK,EAAEA;AACT,CAAC,CAAC;AAEF,MAAMM,UAAU,GAAGA,CAACC,QAAgB,EAAEC,QAAgB,KAAK;EACzD,OAAO,MAAOC,QAA6B,IAAK;IAC9CA,QAAQ,CAACb,eAAe,CAAC,CAAC,CAAC;IAC3B,IAAI;MACF,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QACnEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAET,QAAQ;UAAEC;QAAS,CAAC;MAC7C,CAAC,CAAC;MACF,IAAIE,QAAQ,CAACO,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClCV,QAAQ,CAACR,eAAe,CAACiB,IAAI,CAAC,CAAC;MACjC,CAAC,MAAM;QACL,MAAM,IAAIE,KAAK,CAAC,iBAAiB,CAAC;MACpC;IACF,CAAC,CAAC,OAAOpB,KAAsB,EAAE;MAC/B,IAAIA,KAAK,YAAYoB,KAAK,EAAE;QAC1BX,QAAQ,CAACL,eAAe,CAACJ,KAAK,CAACqB,OAAO,CAAC,CAAC;MAC1C,CAAC,MAAM;QACLZ,QAAQ,CAACL,eAAe,CAAC,yCAAyC,CAAC,CAAC;MACtE;IACF;EACF,CAAC;AACH,CAAC;AAED,eAAeE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}