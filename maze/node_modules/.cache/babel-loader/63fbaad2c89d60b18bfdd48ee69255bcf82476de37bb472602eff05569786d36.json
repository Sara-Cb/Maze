{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarac\\\\OneDrive\\\\Desktop\\\\Capstone Project\\\\maze\\\\src\\\\components\\\\elements\\\\ProfessionsChoice.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { Profession } from \"../../types/creativeType\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProfessionsChoice = _ref => {\n  _s();\n  let {\n    formValues,\n    onChange\n  } = _ref;\n  const [selectedProfession, setSelectedProfession] = useState(null);\n  const convertProfessionToString = profession => {\n    return profession.split(\" \").map(word => word.toUpperCase()).join(\"_\");\n  };\n  const handleProfessionChange = e => {\n    const selectedProfessionName = e.target.value;\n    const selectedProfession = Object.values(Profession).find(profession => convertProfessionToString(profession) === selectedProfessionName);\n    setSelectedProfession(selectedProfession || null);\n  };\n  const handleAddProfession = () => {\n    if (selectedProfession && !formValues.professions.includes(selectedProfession)) {\n      const updatedProfessions = [...formValues.professions, selectedProfession];\n      const updatedFormValues = {\n        ...formValues,\n        professions: updatedProfessions\n      };\n      onChange(updatedFormValues);\n      setSelectedProfession(null);\n    }\n  };\n  const handleRemoveProfession = profession => {\n    const updatedProfessions = formValues.professions.filter(p => p !== profession);\n    const updatedFormValues = {\n      ...formValues,\n      professions: updatedProfessions\n    };\n    onChange(updatedFormValues);\n  };\n  useEffect(() => {\n    setSelectedProfession(null);\n  }, [formValues.professions]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formProfession\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Profession\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n        value: selectedProfession ? convertProfessionToString(selectedProfession) : \"\",\n        onChange: handleProfessionChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a profession\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), Object.values(Profession).map(profession => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: convertProfessionToString(profession),\n          children: profession\n        }, convertProfessionToString(profession), false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), formValues.professions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Selected professions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: formValues.professions.map(profession => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [profession, /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"link\",\n            onClick: () => handleRemoveProfession(profession),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)]\n        }, convertProfessionToString(profession), true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), formValues.professions.length < 3 && selectedProfession && /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleAddProfession,\n      children: \"Add Profession\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ProfessionsChoice, \"MxhrcQZaYvC3BDnK5ZjH4QBd5O8=\");\n_c = ProfessionsChoice;\nexport default ProfessionsChoice;\nvar _c;\n$RefreshReg$(_c, \"ProfessionsChoice\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","Profession","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfessionsChoice","_ref","_s","formValues","onChange","selectedProfession","setSelectedProfession","convertProfessionToString","profession","split","map","word","toUpperCase","join","handleProfessionChange","e","selectedProfessionName","target","value","Object","values","find","handleAddProfession","professions","includes","updatedProfessions","updatedFormValues","handleRemoveProfession","filter","p","children","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Select","length","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sarac/OneDrive/Desktop/Capstone Project/maze/src/components/elements/ProfessionsChoice.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { Profession } from \"../../types/creativeType\";\r\nimport { RegisterFormValues } from \"../sections/RegisterForm\";\r\n\r\ninterface ProfessionsChoiceProps {\r\n  formValues: RegisterFormValues;\r\n  onChange: (formValues: RegisterFormValues) => void;\r\n}\r\n\r\nconst ProfessionsChoice: React.FC<ProfessionsChoiceProps> = ({\r\n  formValues,\r\n  onChange,\r\n}) => {\r\n  const [selectedProfession, setSelectedProfession] =\r\n    useState<Profession | null>(null);\r\n\r\n  const convertProfessionToString = (profession: Profession): string => {\r\n    return profession\r\n      .split(\" \")\r\n      .map((word) => word.toUpperCase())\r\n      .join(\"_\");\r\n  };\r\n\r\n  const handleProfessionChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    const selectedProfessionName = e.target.value;\r\n    const selectedProfession = Object.values(Profession).find(\r\n      (profession) =>\r\n        convertProfessionToString(profession) === selectedProfessionName\r\n    );\r\n    setSelectedProfession(selectedProfession || null);\r\n  };\r\n\r\n  const handleAddProfession = () => {\r\n    if (\r\n      selectedProfession &&\r\n      !formValues.professions.includes(selectedProfession)\r\n    ) {\r\n      const updatedProfessions = [\r\n        ...formValues.professions,\r\n        selectedProfession,\r\n      ];\r\n      const updatedFormValues = {\r\n        ...formValues,\r\n        professions: updatedProfessions,\r\n      };\r\n      onChange(updatedFormValues);\r\n      setSelectedProfession(null);\r\n    }\r\n  };\r\n\r\n  const handleRemoveProfession = (profession: Profession) => {\r\n    const updatedProfessions = formValues.professions.filter(\r\n      (p: Profession) => p !== profession\r\n    );\r\n    const updatedFormValues = {\r\n      ...formValues,\r\n      professions: updatedProfessions,\r\n    };\r\n    onChange(updatedFormValues);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSelectedProfession(null);\r\n  }, [formValues.professions]);\r\n\r\n  return (\r\n    <>\r\n      <Form.Group controlId=\"formProfession\">\r\n        <Form.Label>Profession</Form.Label>\r\n        <br />\r\n        <Form.Select\r\n          value={\r\n            selectedProfession\r\n              ? convertProfessionToString(selectedProfession)\r\n              : \"\"\r\n          }\r\n          onChange={handleProfessionChange}\r\n        >\r\n          <option value=\"\">Select a profession</option>\r\n          {Object.values(Profession).map((profession) => (\r\n            <option\r\n              key={convertProfessionToString(profession)}\r\n              value={convertProfessionToString(profession)}\r\n            >\r\n              {profession}\r\n            </option>\r\n          ))}\r\n        </Form.Select>\r\n      </Form.Group>\r\n      {formValues.professions.length > 0 && (\r\n        <div>\r\n          <p>Selected professions:</p>\r\n          <ul>\r\n            {formValues.professions.map((profession: Profession) => (\r\n              <li key={convertProfessionToString(profession)}>\r\n                {profession}\r\n                <Button\r\n                  variant=\"link\"\r\n                  onClick={() => handleRemoveProfession(profession)}\r\n                >\r\n                  Remove\r\n                </Button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n      {formValues.professions.length < 3 && selectedProfession && (\r\n        <Button variant=\"primary\" onClick={handleAddProfession}>\r\n          Add Profession\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfessionsChoice;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}