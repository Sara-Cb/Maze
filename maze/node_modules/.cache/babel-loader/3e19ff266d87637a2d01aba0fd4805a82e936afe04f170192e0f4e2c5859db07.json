{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport loginReducer from \"../reducers/loginReducer\";\nimport registerReducer from \"../reducers/registerReducer\";\nimport creativeReducer from \"../reducers/creativeReducer\";\nimport portfolioReducer from \"../reducers/portfolioReducer\";\nimport feedItemReducer from \"../reducers/feedItemReducer\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport elaborateReducer from \"../reducers/elaborateReducer\";\nimport collectionReducer from \"../reducers/collectionReducer\";\nimport thunk from \"redux-thunk\";\nconst rootReducer = combineReducers({\n  login: loginReducer,\n  register: registerReducer,\n  me: creativeReducer,\n  selectedCreative: creativeReducer,\n  portfolio: portfolioReducer,\n  feedItem: feedItemReducer,\n  elaborate: elaborateReducer,\n  collection: collectionReducer\n});\nconst RESET_STORE = \"RESET_STORE\";\nexport const resetStoreAction = {\n  type: RESET_STORE\n};\nconst resettableReducer = (state, action) => {\n  if (action.type === RESET_STORE) {\n    state = undefined;\n  }\n  return rootReducer(state, action);\n};\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, resettableReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  }).concat(thunk)\n});\nexport const persistor = persistStore(store);","map":{"version":3,"names":["combineReducers","loginReducer","registerReducer","creativeReducer","portfolioReducer","feedItemReducer","persistStore","persistReducer","storage","configureStore","elaborateReducer","collectionReducer","thunk","rootReducer","login","register","me","selectedCreative","portfolio","feedItem","elaborate","collection","RESET_STORE","resetStoreAction","type","resettableReducer","state","action","undefined","persistConfig","key","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","concat","persistor"],"sources":["C:/Users/sarac/OneDrive/Desktop/Capstone Project/maze/src/redux/store/store.ts"],"sourcesContent":["import { combineReducers } from \"redux\";\r\nimport loginReducer from \"../reducers/loginReducer\";\r\nimport registerReducer from \"../reducers/registerReducer\";\r\nimport creativeReducer from \"../reducers/creativeReducer\";\r\nimport portfolioReducer from \"../reducers/portfolioReducer\";\r\nimport feedItemReducer from \"../reducers/feedItemReducer\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport elaborateReducer from \"../reducers/elaborateReducer\";\r\nimport collectionReducer from \"../reducers/collectionReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst rootReducer = combineReducers({\r\n  login: loginReducer,\r\n  register: registerReducer,\r\n  me: creativeReducer,\r\n  selectedCreative: creativeReducer,\r\n  portfolio: portfolioReducer,\r\n  feedItem: feedItemReducer,\r\n  elaborate: elaborateReducer,\r\n  collection: collectionReducer,\r\n});\r\n\r\nconst RESET_STORE = \"RESET_STORE\";\r\n\r\nexport const resetStoreAction = { type: RESET_STORE };\r\n\r\nconst resettableReducer = (state: any, action: any) => {\r\n  if (action.type === RESET_STORE) {\r\n    state = undefined;\r\n  }\r\n  return rootReducer(state, action);\r\n};\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, resettableReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false,\r\n    }).concat(thunk),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,0BAA0B;AACnD,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAOC,gBAAgB,MAAM,8BAA8B;AAC3D,OAAOC,eAAe,MAAM,6BAA6B;AACzD,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,gBAAgB,MAAM,8BAA8B;AAC3D,OAAOC,iBAAiB,MAAM,+BAA+B;AAC7D,OAAOC,KAAK,MAAM,aAAa;AAE/B,MAAMC,WAAW,GAAGb,eAAe,CAAC;EAClCc,KAAK,EAAEb,YAAY;EACnBc,QAAQ,EAAEb,eAAe;EACzBc,EAAE,EAAEb,eAAe;EACnBc,gBAAgB,EAAEd,eAAe;EACjCe,SAAS,EAAEd,gBAAgB;EAC3Be,QAAQ,EAAEd,eAAe;EACzBe,SAAS,EAAEV,gBAAgB;EAC3BW,UAAU,EAAEV;AACd,CAAC,CAAC;AAEF,MAAMW,WAAW,GAAG,aAAa;AAEjC,OAAO,MAAMC,gBAAgB,GAAG;EAAEC,IAAI,EAAEF;AAAY,CAAC;AAErD,MAAMG,iBAAiB,GAAGA,CAACC,KAAU,EAAEC,MAAW,KAAK;EACrD,IAAIA,MAAM,CAACH,IAAI,KAAKF,WAAW,EAAE;IAC/BI,KAAK,GAAGE,SAAS;EACnB;EACA,OAAOf,WAAW,CAACa,KAAK,EAAEC,MAAM,CAAC;AACnC,CAAC;AAED,MAAME,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXtB;AACF,CAAC;AAED,MAAMuB,gBAAgB,GAAGxB,cAAc,CAACsB,aAAa,EAAEJ,iBAAiB,CAAC;AAEzE,OAAO,MAAMO,KAAK,GAAGvB,cAAc,CAAC;EAClCwB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;EACrB,CAAC,CAAC,CAACC,MAAM,CAACzB,KAAK;AACnB,CAAC,CAAC;AAEF,OAAO,MAAM0B,SAAS,GAAGhC,YAAY,CAAC0B,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}